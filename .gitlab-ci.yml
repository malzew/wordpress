---
# GitLab CI/CD pipeline with building docker images
# Use docker-in-docker service for testing
# Use docker-compose.yml for deploy

stages:
  - test
  - deploy

test:
  image: docker:latest
  stage: test
  services:
    - docker:stable-dind
  script:
    - docker build -t $CI_PROJECT_NAME .
    - docker run --rm -p 8080:80 -d $CI_PROJECT_NAME
    - sleep 15
    - wget -q --output-document - "http://docker:8080" | grep -q 'WordPress'

deploy:
  image: alpine:latest
  stage: deploy
  tags:
    - deployment
  script:
    - chmod og= $ID_RSA
    - apk update && apk add openssh-client
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "sudo rm -rf /opt/$CI_PROJECT_NAME/src/*"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "git clone --single-branch -b main $CI_REPOSITORY_URL /opt/$CI_PROJECT_NAME/src"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker stop $CI_PROJECT_NAME || true"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker rmi $CI_PROJECT_NAME:old || true"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker tag $CI_PROJECT_NAME $CI_PROJECT_NAME:old || true"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker-compose up -d --build -f /opt/$CI_PROJECT_NAME/src/docker-compose.yml"
  environment:
    name: production
    url: https://www.eladmin.ru
  only:
    - main
    - tags
